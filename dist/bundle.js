(()=>{class e{constructor(e,r){this.shape=e.map((e=>e.map((e=>({marked:e.marked}))))),this.color=r,this.rotation=0,this.currentShape=this.shape[this.rotation],this.row=0,this.col=0}rotate(){}moveDown(){this.isValidMove(this.row+1,this.col)?this.row++:(o.placeTetromino(this,this.row,this.col),this.reset())}moveLeft(){this.isValidMove(this.row,this.col-1)&&this.col--}moveRight(){this.isValidMove(this.row,this.col+1)&&this.col++}isValidMove(e,r){return o.isValidMove(this,e,r)}reset(){this.row=0,this.col=0,this.rotation=0,this.currentShape=this.shape[this.rotation]}}tetrominoShapes={I:[[{marked:!0},{marked:!0},{marked:!0},{marked:!0}]],J:[[{marked:!0},{marked:!1},{marked:!1}],[{marked:!0},{marked:!0},{marked:!0}]],L:[[{marked:!1},{marked:!1},{marked:!0}],[{marked:!0},{marked:!0},{marked:!0}]],O:[[{marked:!0},{marked:!0}],[{marked:!0},{marked:!0}]],S:[[{marked:!1},{marked:!0},{marked:!0}],[{marked:!0},{marked:!0},{marked:!1}]],T:[[{marked:!1},{marked:!0},{marked:!1}],[{marked:!0},{marked:!0},{marked:!0}]],Z:[[{marked:!0},{marked:!0},{marked:!1}],[{marked:!1},{marked:!0},{marked:!0}]]},new e(tetrominoShapes.I);const r=new e(tetrominoShapes.J);let o=new class{constructor(e,r){this.rows=e,this.cols=r,this.board=[],this.createGameboard()}createGameboard(){for(let e=0;e<this.rows;e++){let r=[];for(let o=0;o<this.cols;o++){const t={x:e,y:o,marked:!1};r.push(t)}this.board.push(r)}}isValidMove(e,r,o){for(let t=0;t<e.shape.length;t++)for(let a=0;a<e.shape[t].length;a++){const s=t+r,i=a+o;if(e.shape[t][a].marked&&this.board[s]&&this.board[s][i]&&this.board[s][i].marked)return!1}return!0}placeTetromino(e,r,o){if(this.isValidMove(e,r,o))for(let t=0;t<e.shape.length;t++)for(let a=0;a<e.shape[t].length;a++){const s=r+t,i=o+a;e.shape[t][a].marked&&(this.board[s][i].marked=!0)}}clearLines(){for(let e=this.rows-1;e>=0;e--)this.board[e].every((e=>e.marked))&&(this.board.splice(e,1),this.board.unshift(Array(this.cols).fill({x:0,y:0,marked:!1})))}}(10,20);console.log(o),console.log(o),document.addEventListener("keydown",(e=>function(e,r){switch(e.code){case"ArrowUp":r.rotate();break;case"ArrowDown":r.moveDown(),o.placeTetromino(r,r.row,r.col),console.log(o);break;case"ArrowLeft":r.moveLeft(),o.placeTetromino(r,r.row,r.col),console.log(o);break;case"ArrowRight":r.moveRight(),o.placeTetromino(r,r.row,r.col),console.log(o)}}(e,r)))})();